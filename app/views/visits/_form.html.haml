= simple_form_for [@household, visit], url: household_visit_path [@houshold, visit] do |f|
  %h2 Household: #{visit.show_household}
  #visit-color.well.well-large
    #visit-date
      = f.input  :visited_on,     :label => 'Date of Visit', default: Date.today, order: [:day, :month],input_html: { class: 'span2' }
      .br
        = f.association :neighbor, collection: household.neighbors.all, default: 1, validate: { :presence => true }
      .br
      .span3
        = f.input  :starch,         :label => false,  collection: ['Beans','Rice','Potatoes'],selected: 'Beans'
      .span3
        = f.input  :cereal,         :label => false,  collection: ['Cereal','Grits','Oatmeal']
      .span3
        = f.input  :option1,        :label => false,  collection: ['Peanut Butter Jelly', 'Deserts','Baby Fromula'], prompt: 'Options'
      .br
      
        - if !household.food_alert.blank?
          %h4 Food Restrictions: #{household.food_alert}
        = f.input  :items_received, prompt:'Items here will show up on the printer order', :label => 'Special Needs',input_html: {rows: 4, class: 'span9' }
        = f.input  :notes,          :label => 'Notes',input_html: {rows: 4, class: 'span9' }
        = f.button :submit, :class => 'btn-primary', :label=> 'Save' 
        

  
  /   %script{:type=>"text/javascript"}
  /     $('input selector').enableClientSideValidations()
  /   #visit-date
  /     = f.input  :visited_on, label: 'Date of Visit', default: Date.today, order: [:day, :month],input_html: { class: 'span2' }
  /     %br
  /     / = f.association :neighbor, collection: @household.neighbors.all, default: 1, validate: { :presence => true }
  /     %br
  /     .span3
  /       = f.input  :starch,  label: false,  collection: [ 'Beans','Rice','Potatoes','nothing' ] , selected: 'Beans', input_html: { class: 'span2' }
  /     .span3
  /       = f.input  :cereal,  label: false,  collection: ['Cereal','Grits','Oatmeal'], selected: 'Cereal',input_html: {class: 'span2' }
  /     .span3
  /       = f.input :option1,  label: false,  collection: ['Peanut Butter','Jelly', 'PB &,J','poptarts','Pancakes'], prompt: 'Options', input_html: {class: 'span2' }
  /     .span11
  /     %br
  /     %br
  /       / - if !household.food_alert.blank?
  /       / %h4 Food Restrictions: #{household.food_alert}
  /     = f.input  :items_received, prompt:'Items here will show up on the printer order', :label => 'Special Needs',input_html: {rows: 4, class: 'span9' }
  /     = f.input  :notes,          :label => 'Notes',input_html: {rows: 4, class: 'span9' }
  /     .actions.span12
  /   %p.submit-visit
  /     = f.button :submit, :class => 'btn btn-inverse', :label=> 'Save'
  / %hr

